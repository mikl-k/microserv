
plugins {
	id 'java'
	id 'jvm-test-suite'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "com.adarshr.test-logger" version "4.0.0"
	id "com.bmuschko.docker-spring-boot-application" version "9.3.7"
	id "com.github.ben-manes.versions" version "0.49.0"
}

group = 'SkillBox.com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

bootRun {
	jvmArgs = ['-Xmx1g']
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.19.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.liquibase:liquibase-core'
	implementation 'net.lbruun.springboot:preliquibase-spring-boot-starter:1.4.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation "org.testcontainers:postgresql:1.19.1"
}

jar {
	manifest {
		attributes "Main-Class": "com.skillbox.users.UsersApplication"
	}
	processResources {
		exclude('')
	}
}

docker {
	springBootApplication {
		baseImage = 'openjdk:8-alpine'
		ports = [9090, 8080]
		images = ['users:0.0.1', 'awesome-spring-boot:latest']
		jvmArgs = ['-Dspring.profiles.active=production', '-Xmx2048m']
	}
	/*
	javaApplication {
		baseImage.set("eclipse-temurin:17.0.7_7-jre-focal")
		maintainer.set("mikl")
		images.set(asList("${project.name}:${project.version}"))
	}*/
}

testing {
	suites {
		configureEach {
			useJUnitJupiter()
			dependencies {
				implementation project()
				implementation 'org.springframework.boot:spring-boot-starter-test'
				implementation 'org.testcontainers:junit-jupiter'
				implementation 'org.testcontainers:postgresql:1.19.2'
			}
		}

		integrationTest(JvmTestSuite) {
			integrationTest(JvmTestSuite) {
			}

			targets {
				all {
					testTask.configure {
						shouldRunAfter(test)
					}
				}
			}
		}

		test {

			testlogger {
				// pick a theme - mocha, standard, plain, mocha-parallel, standard-parallel or plain-parallel
				theme 'standard'

				// set to false to disable detailed failure logs
				showExceptions true

				// set to false to hide stack traces
				showStackTraces true

				// set to true to remove any filtering applied to stack traces
				showFullStackTraces false

				// set to false to hide exception causes
				showCauses true

				// set threshold in milliseconds to highlight slow tests
				slowThreshold 2000

				// displays a breakdown of passes, failures and skips along with total duration
				showSummary true

				// set to true to see simple class names
				showSimpleNames false

				// set to false to hide passed tests
				showPassed true

				// set to false to hide skipped tests
				showSkipped true

				// set to false to hide failed tests
				showFailed true

				// enable to see standard out and error streams inline with the test results
				showStandardStreams false

				// set to false to hide passed standard out and error streams
				showPassedStandardStreams true

				// set to false to hide skipped standard out and error streams
				showSkippedStandardStreams true

				// set to false to hide failed standard out and error streams
				showFailedStandardStreams true
			}
		}
	}
}

tasks.named('test') {
	dependsOn(testing.suites.integrationTest)
}
